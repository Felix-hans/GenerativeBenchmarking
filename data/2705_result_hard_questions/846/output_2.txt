You can solve this problem by using a greedy approach. Here's one way to implement the solution in Python:

```python
from collections import Counter

class Solution:
    def isNStraightHand(self, hand, groupSize):
        # Count the frequency of each card value
        counter = Counter(hand)
        
        # Sort the hand in ascending order
        sorted_hand = sorted(hand)
        
        for card in sorted_hand:
            if counter[card] > 0:
                # Start a new group with the current card
                counter[card] -= 1
                
                # Check the consecutive groupSize cards
                for i in range(1, groupSize):
                    if counter[card + i] > 0:
                        counter[card + i] -= 1
                    else:
                        # Cannot form a consecutive group
                        return False
        
        return True
```

You can create an instance of the `Solution` class and call the `isNStraightHand` method with the input values to test it, like this:

```python
hand = [1, 2, 3, 6, 2, 3, 4, 7, 8]
groupSize = 3

solution = Solution()
result = solution.isNStraightHand(hand, groupSize)
print(result)  # Output: True
```

I hope this helps! Let me know if you have any further questions.