Here is the code implementation for the given task:

```go
import "fmt"

func zeroFilledSubarray(nums []int) int64 {
    count := int64(0)
    for i := 0; i < len(nums); i++ {
        if nums[i] == 0 {
            count += int64(subarrayCount(nums[i+1:]))
        }
    }
    return count
}

func subarrayCount(nums []int) int {
    count := 0
    for i := 0; i < len(nums); i++ {
        if nums[i] != 0 {
            break
        }
        count++
    }
    return count
}
```


Example usage:
```go
func main() {
    nums := []int{1, 3, 0, 0, 2, 0, 0, 4}
    result := zeroFilledSubarray(nums)
    fmt.Println(result) // Output: 6

    nums = []int{0, 0, 0, 2, 0, 0}
    result = zeroFilledSubarray(nums)
    fmt.Println(result) // Output: 9

    nums = []int{2, 10, 2019}
    result = zeroFilledSubarray(nums)
    fmt.Println(result) // Output: 0
}
```