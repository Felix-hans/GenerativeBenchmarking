Here's the implementation for the given task in Python:

```python
from typing import List

class Solution:
    def goodIndices(self, nums: List[int], k: int) -> List[int]:
        n = len(nums)
        good_indices = []
        
        for i in range(k, n - k):
            if (
                nums[i-k:i] == sorted(nums[i-k:i], reverse=True) and
                nums[i+1:i+k+1] == sorted(nums[i+1:i+k+1])
            ):
                good_indices.append(i)
        
        return good_indices
```

You can test the solution with the provided examples:
```python
solution = Solution()
nums1 = [2, 1, 1, 1, 3, 4, 1]
k1 = 2
print(solution.goodIndices(nums1, k1))  # Output: [2, 3]

nums2 = [2, 1, 1, 2]
k2 = 2
print(solution.goodIndices(nums2, k2))  # Output: []
```

Please note that this solution has a time complexity of O(n), where n is the length of the input array.