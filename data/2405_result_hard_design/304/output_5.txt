To implement the NumMatrix class and handle the sumRegion queries efficiently, we can use the concept of a cumulative sum matrix. The cumulative sum matrix stores the sum of all elements from the top-left corner of the original matrix to each element.

Here's the implementation of the NumMatrix class:

```python
class NumMatrix:
    def __init__(self, matrix):
        if not matrix or not matrix[0]:
            self.cumulative_sum = None
        else:
            m, n = len(matrix), len(matrix[0])
            self.cumulative_sum = [[0] * (n + 1) for _ in range(m + 1)]

            # Calculate cumulative sum matrix
            for i in range(1, m + 1):
                for j in range(1, n + 1):
                    self.cumulative_sum[i][j] = (
                        matrix[i - 1][j - 1]
                        + self.cumulative_sum[i - 1][j]
                        + self.cumulative_sum[i][j - 1]
                        - self.cumulative_sum[i - 1][j - 1]
                    )

    def sumRegion(self, row1, col1, row2, col2):
        if self.cumulative_sum is None:
            return 0

        return (
            self.cumulative_sum[row2 + 1][col2 + 1]
            - self.cumulative_sum[row2 + 1][col1]
            - self.cumulative_sum[row1][col2 + 1]
            + self.cumulative_sum[row1][col1]
        )
```

In the `__init__` method, we initialize the `cumulative_sum` matrix and calculate the cumulative sum for each element based on the given matrix.

In the `sumRegion` method, we utilize the cumulative sum matrix to compute the sum of the elements inside the specified rectangle efficiently. By subtracting the appropriate cumulative sums, we can obtain the sum of the rectangle in constant time complexity, O(1).

Here's how you can use the `NumMatrix` class:

```python
# Example usage
matrix = [
    [3, 0, 1, 4, 2],
    [5, 6, 3, 2, 1],
    [1, 2, 0, 1, 5],
    [4, 1, 0, 1, 7],
    [1, 0, 3, 0, 5]
]
numMatrix = NumMatrix(matrix)
print(numMatrix.sumRegion(2, 1, 4, 3))  # Output: 8
print(numMatrix.sumRegion(1, 1, 2, 2))  # Output: 11
print(numMatrix.sumRegion(1, 2, 2, 4))  # Output: 12
```

The `sumRegion` method is called on the `numMatrix` object with the specified rectangle coordinates (row1, col1, row2, col2), and it returns the sum of the elements inside that rectangle.