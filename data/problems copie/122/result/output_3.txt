To solve this problem, we can iterate through the prices array and keep track of the minimum price seen so far and the maximum profit we can achieve. Here's the implementation of the `maxProfit` function:

```python
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        if not prices:
            return 0
        
        min_price = prices[0]
        max_profit = 0
        
        for price in prices:
            if price < min_price:
                min_price = price
            elif price - min_price > max_profit:
                max_profit = price - min_price
        
        return max_profit
```

This solution has a time complexity of O(n), where n is the length of the prices array, as we iterate through the array only once.