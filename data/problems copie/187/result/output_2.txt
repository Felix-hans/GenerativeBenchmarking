Here's the implementation of the `findRepeatedDnaSequences` function in Python:

```python
from collections import Counter
from typing import List

class Solution:
    def findRepeatedDnaSequences(self, s: str) -> List[str]:
        sequences = []
        counter = Counter()

        for i in range(len(s) - 9):
            sequence = s[i:i+10]
            counter[sequence] += 1
            if counter[sequence] == 2:
                sequences.append(sequence)

        return sequences
```

You can use the `Solution` class and call the `findRepeatedDnaSequences` method, passing the DNA sequence as a string. It will return a list of all 10-letter-long sequences that occur more than once in the DNA molecule.

Here's an example of how you can use the solution:

```python
solution = Solution()
dna_sequence = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"
repeated_sequences = solution.findRepeatedDnaSequences(dna_sequence)
print(repeated_sequences)
```

Output:
```
['AAAAACCCCC', 'CCCCCAAAAA']
```

Similarly, you can test it with other DNA sequences as well.