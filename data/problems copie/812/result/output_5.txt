Given an array of points on the X-Y plane points where points[i] = [xi, yi],
return the area of the largest triangle that can be formed by any three
different points. Answers within 10^-5 of the actual answer will be
accepted.


Example 1:


Input: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
Output: 2.00000
Explanation: The five points are shown in the above figure. The red triangle
is the largest.


Example 2:


Input: points = [[1,0],[0,0],[0,1]]
Output: 0.50000



Constraints:


3 <= points.length <= 50
-50 <= xi, yi <= 50
All the given points are unique.





```
class Solution:
    def largestTriangleArea(self, points: List[List[int]]) -> float:
```Implement the above task in Python. solve this problem, we can use the Shoelace formula, also known as the Gauss area formula, to calculate the area of a triangle given its three vertices. The formula is as follows:

Area = 0.5 * |x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2)|

We can iterate over all possible combinations of three points from the given array and calculate the area for each triangle. Finally, we return the maximum area found.

Here's the implementation of the `largestTriangleArea` function:

```python
from typing import List

class Solution:
    def largestTriangleArea(self, points: List[List[int]]) -> float:
        def calculate_area(p1, p2, p3):
            x1, y1 = p1
            x2, y2 = p2
            x3, y3 = p3
            return 0.5 * abs(x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2))

        n = len(points)
        max_area = 0

        for i in range(n - 2):
            for j in range(i + 1, n - 1):
                for k in range(j + 1, n):
                    area = calculate_area(points[i], points[j], points[k])
                    max_area = max(max_area, area)

        return max_area
```

Now you can create an instance of the `Solution` class and call the `largestTriangleArea` method with your input array to get the result. For example:

```python
points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
solution = Solution()
result = solution.largestTriangleArea(points)
print(result)
```

Output:
```
2.0
```

The code finds the largest triangle area in the given array of points and returns the result.