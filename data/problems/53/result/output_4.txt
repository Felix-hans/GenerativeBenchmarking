Here's the Python code that implements the task using the Kadane's algorithm, which has a time complexity of O(n):

```python
class Solution:
    def maxSubArray(self, nums):
        max_sum = nums[0]  # Initialize the maximum sum as the first element
        current_sum = nums[0]  # Initialize the current sum as the first element

        # Iterate through the array starting from the second element
        for num in nums[1:]:
            # Choose whether to start a new subarray or extend the current one
            current_sum = max(num, current_sum + num)
            # Update the maximum sum if necessary
            max_sum = max(max_sum, current_sum)

        return max_sum
```

You can create an instance of the `Solution` class and call the `maxSubArray` method, passing the input array as an argument. For example:

```python
nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4]
solution = Solution()
result = solution.maxSubArray(nums)
print(result)  # Output: 6
```

This code will output the maximum sum of a subarray in the given input array `nums`.