To solve this problem, we can use the Shoelace formula, also known as the Gauss area formula, to calculate the area of a triangle given its three vertices. The formula is as follows:

Area = 0.5 * |(x1*y2 + x2*y3 + x3*y1) - (x2*y1 + x3*y2 + x1*y3)|

We can iterate through all possible combinations of three points from the given array and calculate the area for each triangle. Finally, we return the maximum area found.

Here's the implementation of the `largestTriangleArea` function in Python:

```python
from typing import List

class Solution:
    def largestTriangleArea(self, points: List[List[int]]) -> float:
        n = len(points)
        max_area = 0.0

        for i in range(n):
            for j in range(i + 1, n):
                for k in range(j + 1, n):
                    x1, y1 = points[i]
                    x2, y2 = points[j]
                    x3, y3 = points[k]
                    area = 0.5 * abs(x1 * y2 + x2 * y3 + x3 * y1 - x2 * y1 - x3 * y2 - x1 * y3)
                    max_area = max(max_area, area)

        return max_area
```

You can create an instance of the `Solution` class and call the `largestTriangleArea` function with the input points to get the largest triangle area. Here's an example usage:

```python
solution = Solution()
points = [[0, 0], [0, 1], [1, 0], [0, 2], [2, 0]]
largest_area = solution.largestTriangleArea(points)
print(largest_area)
```

Output:
```
2.0
```

The code will calculate the largest area of a triangle that can be formed by any three different points in the given input array.