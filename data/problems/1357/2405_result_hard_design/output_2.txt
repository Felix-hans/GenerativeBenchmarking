Here's the implementation of the `Cashier` class in Python based on the given requirements:

```python
from typing import List

class Cashier:
    def __init__(self, n: int, discount: int, products: List[int], prices: List[int]):
        self.n = n
        self.discount = discount
        self.products = products
        self.prices = prices
        self.customer_count = 0

    def getBill(self, product: List[int], amount: List[int]) -> float:
        self.customer_count += 1
        subtotal = sum([self.prices[self.products.index(p)] * a for p, a in zip(product, amount)])

        if self.customer_count % self.n == 0:
            subtotal -= (subtotal * self.discount) / 100
        
        return subtotal
```

Here's how you can use the `Cashier` class:

```python
cashier = Cashier(3, 50, [1, 2, 3, 4, 5, 6, 7], [100, 200, 300, 400, 300, 200, 100])
print(cashier.getBill([1, 2], [1, 2]))    # Output: 500.0
print(cashier.getBill([3, 7], [10, 10]))  # Output: 4000.0
print(cashier.getBill([1, 2, 3, 4, 5, 6, 7], [1, 1, 1, 1, 1, 1, 1]))  # Output: 800.0
print(cashier.getBill([4], [10]))         # Output: 4000.0
print(cashier.getBill([7, 3], [10, 10]))  # Output: 4000.0
print(cashier.getBill([7, 5, 3, 1, 6, 4, 2], [10, 10, 10, 9, 9, 9, 7]))  # Output: 7350.0
print(cashier.getBill([2, 3, 5], [5, 3, 2]))  # Output: 2500.0
```

The `Cashier` class maintains the count of customers and checks if the current customer is the nth customer (where n is the given interval for discounts). If it is the nth customer, the discount is applied to the subtotal. The `getBill` method calculates the subtotal based on the products and amounts provided, and returns the final total with or without the discount, depending on the customer count.