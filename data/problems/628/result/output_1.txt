To find the maximum product of three numbers in the given array, we can follow the following approach:

1. Sort the array `nums` in ascending order.
2. Calculate two products:
   - Product of the three largest elements (last three elements after sorting): `max_product = nums[-1] * nums[-2] * nums[-3]`
   - Product of the two smallest elements and the largest element (first two elements after sorting and the last element): `min_product = nums[0] * nums[1] * nums[-1]`
3. Return the maximum of `max_product` and `min_product`.

Here's the implementation of the `maximumProduct` function in Python:

```python
from typing import List

class Solution:
    def maximumProduct(self, nums: List[int]) -> int:
        nums.sort()  # Sort the array in ascending order
        max_product = nums[-1] * nums[-2] * nums[-3]
        min_product = nums[0] * nums[1] * nums[-1]
        return max(max_product, min_product)
```

You can create an instance of the `Solution` class and call the `maximumProduct` method with your input array to get the maximum product. For example:

```python
solution = Solution()
nums = [1, 2, 3]
result = solution.maximumProduct(nums)
print(result)  # Output: 6
```

```python
solution = Solution()
nums = [1, 2, 3, 4]
result = solution.maximumProduct(nums)
print(result)  # Output: 24
```

```python
solution = Solution()
nums = [-1, -2, -3]
result = solution.maximumProduct(nums)
print(result)  # Output: -6
```

The code handles the given constraints, including the length of the `nums` array and the range of values for each element.