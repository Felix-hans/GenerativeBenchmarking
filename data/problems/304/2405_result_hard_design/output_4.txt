To implement the NumMatrix class in Python, you can use a pre-computation technique called prefix sum. This technique allows you to calculate the sum of a rectangular region in constant time complexity (O(1)).

Here's the implementation:

```python
class NumMatrix:
    def __init__(self, matrix):
        if not matrix or not matrix[0]:
            self.prefix_sum = None
        else:
            rows, cols = len(matrix), len(matrix[0])
            self.prefix_sum = [[0] * (cols + 1) for _ in range(rows + 1)]

            for i in range(1, rows + 1):
                for j in range(1, cols + 1):
                    self.prefix_sum[i][j] = (
                        matrix[i - 1][j - 1]
                        + self.prefix_sum[i - 1][j]
                        + self.prefix_sum[i][j - 1]
                        - self.prefix_sum[i - 1][j - 1]
                    )

    def sumRegion(self, row1, col1, row2, col2):
        if self.prefix_sum is None:
            return 0

        return (
            self.prefix_sum[row2 + 1][col2 + 1]
            - self.prefix_sum[row2 + 1][col1]
            - self.prefix_sum[row1][col2 + 1]
            + self.prefix_sum[row1][col1]
        )
```

The `NumMatrix` class uses a 2D array called `prefix_sum` to store the cumulative sum of the elements of the given matrix. In the constructor (`__init__`), it initializes the `prefix_sum` array by calculating the cumulative sum for each cell using the formula:

```
prefix_sum[i][j] = matrix[i-1][j-1] + prefix_sum[i-1][j] + prefix_sum[i][j-1] - prefix_sum[i-1][j-1]
```

This formula takes into account the previous row, previous column, and the overlapping area, allowing us to calculate the cumulative sum efficiently.

In the `sumRegion` method, it calculates the sum of the elements in the given rectangular region using the prefix sum values. By subtracting the appropriate prefix sum values, it can calculate the sum in constant time complexity (O(1)).

You can use the `NumMatrix` class as shown in the example:

```python
matrix = [
    [3, 0, 1, 4, 2],
    [5, 6, 3, 2, 1],
    [1, 2, 0, 1, 5],
    [4, 1, 0, 1, 7],
    [1, 0, 3, 0, 5]
]

numMatrix = NumMatrix(matrix)
print(numMatrix.sumRegion(2, 1, 4, 3))  # Output: 8
print(numMatrix.sumRegion(1, 1, 2, 2))  # Output: 11
print(numMatrix.sumRegion(1, 2, 2, 4))  # Output: 12
```

The `sumRegion` method will return the sum of the elements within the specified rectangular region, based on the initialized `prefix_sum` array.