To solve the task, you can iterate from 1 to n and check the divisibility of each number. Based on the divisibility, you can append the corresponding string to the answer list. Here's the implementation of the `fizzBuzz` function:

```python
from typing import List

class Solution:
    def fizzBuzz(self, n: int) -> List[str]:
        answer = []
        for i in range(1, n+1):
            if i % 3 == 0 and i % 5 == 0:
                answer.append("FizzBuzz")
            elif i % 3 == 0:
                answer.append("Fizz")
            elif i % 5 == 0:
                answer.append("Buzz")
            else:
                answer.append(str(i))
        return answer
```

You can create an instance of the `Solution` class and call the `fizzBuzz` method with the desired `n` value to get the corresponding FizzBuzz list. For example:

```python
solution = Solution()
n = 15
result = solution.fizzBuzz(n)
print(result)
```

Output:
```
["1","2","Fizz","4","Buzz","Fizz","7","8","Fizz","Buzz","11","Fizz","13","14","FizzBuzz"]
```

The solution iterates from 1 to 15 and builds the answer list according to the FizzBuzz rules.