To count the number of battleships on the board, we can iterate through each cell and count the battleships based on the following conditions:

1. If the current cell is '.', it is empty, so we move on to the next cell.
2. If the current cell is 'X', we check if the cell above or to the left of it is also 'X'. If either of them is 'X', it means the current cell is part of a battleship, so we move on to the next cell.
3. If the current cell is 'X' and neither the cell above nor the cell to the left of it is 'X', it means we have encountered a new battleship.

Here's the implementation of the `countBattleships` function:

```python
class Solution:
    def countBattleships(self, board: List[List[str]]) -> int:
        count = 0
        rows, cols = len(board), len(board[0])
        
        for i in range(rows):
            for j in range(cols):
                if board[i][j] == '.':
                    continue
                if i > 0 and board[i-1][j] == 'X':
                    continue
                if j > 0 and board[i][j-1] == 'X':
                    continue
                count += 1
                
        return count
```

This solution performs a one-pass traversal of the board and uses only O(1) extra memory since we are not storing any additional data structures.